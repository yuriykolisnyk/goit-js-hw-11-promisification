{"version":3,"sources":["js/task-1.js","js/task-2.js","js/task-3.js","index.js"],"names":["delay","ms","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","callback","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","onSuccess","onError","setTimeout","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAAA,MAAMA,EAAQC,MAIRC,EAASC,GAAQC,QAAQC,sBAAsBF,aAGrDH,GAAYM,KAAKJ,SACjBF,GAAYM,KAAKJ,SACjBF,GAAYM,KAAKJ;;ACTjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,EAAUC,KAK3CA,EAJqBF,EAASG,IAAIC,GAChCA,EAAKP,OAASI,EAAW,IAAKG,EAAMN,QAASM,EAAKN,QAAWM,KAM3Db,EAASc,GAAgBZ,QAAQa,MAAMD,GAK7CN,EAAgBH,EAAO,QAASL,GAChCQ,EAAgBH,EAAO,MAAOL,GAK9BQ,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;AC3BnC,MAAMgB,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkB,CAACC,EAAaC,EAAWC,KACzC3B,MAAAA,EAAQkB,EAA0B,IAAK,KAE7CU,WAAW,KACUP,KAAKE,SAAW,GAGjCG,EAAUD,EAAYI,GAAI7B,GAE1B2B,EAAQF,EAAYI,KAErB7B,IAGC8B,EAAa,CAACD,EAAI1B,KACtBC,QAAQC,mBAAmBwB,kBAAmB1B,QAG1C4B,EAAWF,IACfzB,QAAQ4B,qCAAqCH,+BAM/CL,EAAgB,CAAEK,GAAI,GAAII,OAAQ,KAAOH,EAAYC,GACrDP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,KAAOH,EAAYC,GACrDP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,IAAMH,EAAYC,GACpDP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,KAAOH,EAAYC,GAIrDP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,MAAO3B,KAAKwB,GAAYI,MAAMH,GAEhEP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,MAAO3B,KAAKwB,GAAYI,MAAMH,GAEhEP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,KAAM3B,KAAKwB,GAAYI,MAAMH,GAE/DP,EAAgB,CAAEK,GAAI,GAAII,OAAQ,MAAO3B,KAAKwB,GAAYI,MAAMH;;ACvChE,aAHA,QAAA,oBACA,QAAA,eACA,QAAA,eACA,QAAA","file":"src.861b446b.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n  // Твой код\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName, callback) => {\n  const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  );\n\n  callback(updatedUsers);\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n */\ntoggleUserState(users, 'Mango', logger);\ntoggleUserState(users, 'Lux', logger);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction, onSuccess, onError) => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n      onSuccess(transaction.id, delay);\n    } else {\n      onError(transaction.id);\n    }\n  }, delay);\n};\n\nconst logSuccess = (id, time) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\nmakeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\nmakeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\nmakeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import './sass/main.scss';\nimport './js/task-1';\nimport './js/task-2';\nimport './js/task-3';\n"]}